1，设置mysql配置文件，将数据库默认编码转化为utf8
     vim /etc/my.cnf
    
     [client]
     default-character-set = utf8
     [mysqld]
     default-storage-engine = INNODB
     character-set-server = utf8
     collation-server = utf8_general_ci
 
     重启 systemctl restart mariadb
     登陆mysql后， show variables like '%char%'  查看mysql的编码情况


2，安装支持Python的MySQL驱动
     pip install mysql-connector
     

3，演示：连接到MySQL服务器的test数据库
     # 导入MySQL驱动 
     import mysql.connector
     # 连接数据库
     conn = mysql.connector.connect(user='root', password='password', database='test')
     # 连接到数据库后，需要打开游标，称之为Cursor，通过Cursor执行SQL语句，然后，获得执行结果
     cursor = conn.cursor()

     # 创建user表:
     cursor.execute('create table user (id varchar(20) primary key, name varchar(20))')
     # 插入一行记录，注意MySQL的占位符是%s:
     cursor.execute('insert into user (id, name) values (%s, %s)', ['1', 'Michael'])
     print(cursor.rowcount)   # 获得插入的行数
     conn.commit()     #  执行insert等操作后要调用commit()提交事务
     cursor.close()       #  关闭游标

     # 查询:
     cursor = conn.cursor()
     cursor.execute('select * from user where id = %s', ('1',))
     values = cursor.fetchall()    # 获得查询结果集
     print(values)
     cursor.close()
     conn.close()   # 关闭连接


4，增删改查
#!/usr/bin/python
# -*- coding: UTF-8 -*-

from bottle import route, run, static_file
from bottle import request
import time
import mysql.connector

page='''
<html>
<form action="/add" method="post">
name <input type="text" name="name" vlaue=""/>
todo <input type="text" name="todo" value=""/>
<input type="submit" value="提交"/>
</form>
</html>
'''
conn = mysql.connector.connect(user='root', password='root', database='wlp')
cursor = conn.cursor()

@route('/todo')
def todo():
        return page

def m_add(name, todo):
        #cursor.execute('create table todo(id int primary key auto_increment, name varchar(20), todo varchar(20))')
        # 插入单条数据
        # cursor.execute('insert into todo values(%s,%s,%s)', [0,name,todo])
        sqlin="insert into todo values(%s,%s,%s)"
        cursor.execute(sqlin, (0,name,todo))
        # 增加数据这块只能用%s，用%d会出错
        # 插入多条
        cursor.executemany(sqlin,[(0,name,todo),(0,name,todo)])
        conn.commit()
        print(cursor.rowcount)
        cursor.close()
        conn.close()

@route('/add', method='POST')
def add_todo():
        # 取出客户端传来的数据，name和todo
        name = request.forms.get('name')
        todo = request.forms.get('todo')
        m_add(name, todo)
        return '<html><h1>%s已保存</h1><a href="/todo">点击回到todo主页</a></html>'%(name)

@route('/del/<name>')
def tododel(name):
        cursor = conn.cursor()
	cursor.execute('delete from todo where name = %s', (name,))
        #cursor.execute('delete from user where name = "q"')
        conn.commit()
        cursor.close()
        #conn.close()  # ！！！ 加上这句话，第二次执行删除操作会报错 OperationalError: MySQL Connection not available 
	return '<html><h1>%s已删除</h1><a href="/todo">点击回到todo主页</a></html>' %(name)

# ！！！ 目前报错 InternalError: Unread result found
def m_find(name):
        print(name)
        cursor = conn.cursor()
        count = cursor.execute('select * from todo where name = %s', (name,))
        #aa=cursor.execute("select * from todo")
        print('11111111111111111111')
        print(count)
        cursor.close()
        #conn.close()
        return('1')

@route('/find/<name>')
def find(name):
	todos = m_find(name)
	return todos


run(host='127.0.0.1',port='10090',debug=True,reloader=True)